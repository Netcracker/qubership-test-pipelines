name: 'Custom GitHub Action'
description: 'A GitHub Action that installs services to kubernetes'
inputs:
  path_to_template:
    description: 'Path to template'
    required: true
  branch:
    description: 'branch with release'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout pipeline
      uses: actions/checkout@v4
      with:
        ref: 'main'
        repository: 'Netcracker/qubership-test-pipelines'
        path: 'qubership-test-pipelines'

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: '${{inputs.branch}}'
        repository: 'Netcracker/${{env.repository_name}}'
        path: '${{env.repository_name}}'

    - name: Create namespaces
      run: kubectl create namespace ${{env.namespace}}
      shell: bash

    - name: Copy template
      run: |
        cp qubership-test-pipelines/${{inputs.path_to_template}} ${{env.repository_name}}/${{env.path_to_chart}}
      shell: bash

    - name: Update images
      run: python qubership-test-pipelines/python/update_images.py --branch='${{inputs.branch}}'
      shell: bash

    - name: Write new images
      run: |
        echo $SET_NEW_IMAGES
      shell: bash

    - name: Install service with helm
      run: |
        IFS=$'/' read -a path <<< "$${{inputs.path_to_template}}"
        template_name=${path[-1]}
        echo $template_name
        cd ${{env.repository_name}}/${{env.path_to_chart}}
        helm install ${{env.service_name}} . -f $template_name -n ${{env.namespace}} $SET_NEW_IMAGES --timeout 10m
      shell: bash

    - name: Get docker images
      run: |
        kubectl get pods -n ${{env.namespace}} -o go-template --template="{{range .items}}{{range .spec.containers}}{{.image}} {{end}}{{end}}"
      shell: bash

      #helm install ${{env.service_name}} . -f $template_name -n ${{env.namespace}} --set integrationTests.image='ghcr.io/netcracker/qubership-consul-integration-tests:improvement\/run_tests' --timeout 10m


