name: 'Custom GitHub Action'
description: 'A GitHub Action that installs services to kubernetes'
inputs:
  deploy_mode:
    description: 'Install or update'
    required: true
    default: 'install'
  path_to_template:
    description: 'Path to template'
    required: true
  service_branch:
    description: 'branch name in repository with service'
    required: true
  pipeline_branch:
    description: 'name of branch with your pipeline in qubership-test-pipelines'
    required: true
  service_name:
    description: 'name with which service will be installed by helm'
    required: true
  repository_name:
    description: 'name of repository with service'
    required: true
  path_to_chart:
    description: 'path to helm chart in repository'
    required: true
  components:
    description: 'list of components in which images should be replaced with images from the current branch'
    required: true
  namespace:
    description: 'namespase to install service'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout pipeline
      uses: actions/checkout@v4
      with:
        ref: '${{inputs.pipeline_branch}}'
        repository: 'Netcracker/qubership-test-pipelines'
        path: 'qubership-test-pipelines'

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: '${{inputs.service_branch}}'
        repository: 'Netcracker/${{inputs.repository_name}}'
        path: '${{inputs.repository_name}}'

#    - name: Create namespaces
#      run: kubectl create namespace ${{inputs.namespace} --dry-run=client -o yaml | kubectl apply -f -
#      shell: bash

    - name: Copy template
      run: |
        cp qubership-test-pipelines/${{inputs.path_to_template}} ${{inputs.repository_name}}/${{inputs.path_to_chart}}
      shell: bash

    - name: Update images
      run: >- 
        python qubership-test-pipelines/python/update_images.py 
        --service_branch='${{inputs.service_branch}}' 
        --path_to_values='${{inputs.repository_name}}/${{inputs.path_to_chart}}/values.yaml'
        --components='${{inputs.components}}'
      shell: bash

    - name: Install service with helm
      run: |
        IFS=$'/' read -a path <<< "$${{inputs.path_to_template}}"
        template_name=${path[-1]}
        echo $template_name
        cd ${{inputs.repository_name}}/${{inputs.path_to_chart}}
        echo ${{inputs.deploy_mode}}
        helm ${{inputs.deploy_mode}} ${{inputs.service_name}} . -f $template_name -n ${{inputs.namespace}} $SET_NEW_IMAGES --timeout 10m
      shell: bash

    - name: Get docker images
      run: |
        kubectl get pods -n ${{inputs.namespace}} -o go-template --template="{{range .items}}{{range .spec.containers}}{{.image}} {{end}}{{end}}"
      shell: bash


