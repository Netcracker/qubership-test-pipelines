name: 'Custom GitHub Action'
description: 'A GitHub Action that installs services to kubernetes'
inputs:
  deploy_mode:
    description: 'Install or update'
    required: true
    default: 'install'
  restricted:
    description: 'true or false'
    required: true
    default: 'false'
  path_to_template:
    description: 'Path to template'
    required: true
  service_branch:
    description: 'branch name in repository with service'
    required: true
  pipeline_branch:
    description: 'name of branch with your pipeline in qubership-test-pipelines'
    required: true
  service_name:
    description: 'name with which service will be installed by helm'
    required: true
  repository_name:
    description: 'name of repository with service'
    required: true
  path_to_chart:
    description: 'path to helm chart in repository'
    required: true
  components:
    description: 'list of components in which images should be replaced with images from the current branch'
    required: true
  namespace:
    description: 'namespace to install service'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout pipeline
      uses: actions/checkout@v4
      with:
        ref: '${{inputs.pipeline_branch}}'
        repository: 'Netcracker/qubership-test-pipelines'
        path: 'qubership-test-pipelines'

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: '${{inputs.service_branch}}'
        repository: 'Netcracker/${{inputs.repository_name}}'
        path: '${{inputs.repository_name}}'

    - name: Create namespace
      if: inputs.deploy_mode == 'install'
      run: kubectl create namespace '${{inputs.namespace}}'
      shell: bash

    - name: Create restricted resources
      if: inputs.restricted == 'true'  && inputs.deploy_mode == 'install'
      uses: Netcracker/qubership-test-pipelines/actions/shared/create_restricted_resources@update_actions
      with:
        path_to_template: ${{inputs.path_to_template}}
        service_branch: ${{inputs.service_branch}}
        service_name: ${{inputs.service_name}}
        repository_name: ${{inputs.repository_name}}
        path_to_chart: ${{inputs.path_to_chart}}
        namespace: ${{inputs.namespace}}

    - name: Copy template
      run: |
        cp qubership-test-pipelines/${{inputs.path_to_template}} ${{inputs.repository_name}}/${{inputs.path_to_chart}}
      shell: bash

    - name: Update images
      run: >- 
        #UPDATE IMAGES
        SET_NEW_IMAGES=$(python qubership-test-pipelines/python/update_images.py 
        --service_branch='${{inputs.service_branch}}' 
        --path_to_values='${{inputs.repository_name}}/${{inputs.path_to_chart}}/values.yaml'
        --components='${{inputs.components}}') >> $GITHUB_ENV
      shell: bash

    - name: Install service with helm
      run: |
        #INSTALL SERVICE WITH HELM
        SET_NEW_IMAGES=$(python qubership-test-pipelines/python/update_images.py --service_branch='${{inputs.service_branch}}' --path_to_values='${{inputs.repository_name}}/${{inputs.path_to_chart}}/values.yaml' --components='${{inputs.components}}')
        template_name=$(basename "${{inputs.path_to_template}}")
        echo $template_name
        echo SET_NEW_IMAGES: $SET_NEW_IMAGES
        cd ${{inputs.repository_name}}/${{inputs.path_to_chart}}
        if [[ ${{inputs.restricted}} == 'false' ]]; then
          helm ${{inputs.deploy_mode}} ${{inputs.service_name}} . -f $template_name -n ${{inputs.namespace}} $SET_NEW_IMAGES --timeout 10m
        else
          helm ${{inputs.deploy_mode}} ${{inputs.service_name}} . -f $template_name -n ${{inputs.namespace}} $SET_NEW_IMAGES --timeout 10m --skip-crds
        fi
      shell: bash

    - name: Get docker images
      run: |
        #GET DOCKER IMAGES
        kubectl get pods -n ${{inputs.namespace}} -o go-template --template="{{range .items}}{{range .spec.containers}}{{.image}} {{end}}{{end}}"
      shell: bash

    - name: Use default context
      if: inputs.restricted == 'true'
      run: kubectl config use-context kind-kind
      shell: bash
