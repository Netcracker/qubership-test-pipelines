name: Opensearch Tests

on:
  workflow_call:
    inputs:
      service_branch:
        required: false
        type: string
      versions_file:
        description: 'Path to versions list file'
        type: string
        required: true
      pipeline_branch:
        description: 'Test pipeline branch name'
        type: string
        required: true
      runner_type:
        description: 'Runner type (self-hosted or ubuntu-latest)'
        type: string
        required: false
        default: 'ubuntu-latest'
    secrets:
      AWS_S3_ACCESS_KEY_ID:
        required: true
      AWS_S3_ACCESS_KEY_SECRET:
        required: true

jobs:
  prepare-versions:
    runs-on: ${{inputs.runner_type}}
    outputs:
      versions: ${{steps.process-versions.outputs.versions}}
      previous_version: ${{steps.process-versions.outputs.previous_version}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.service_branch}}'
          repository: 'Netcracker/qubership-opensearch'
          path: 'qubership-opensearch'
      - name: Process versions file
        id: process-versions
        run: |
          versions_str=$(cat qubership-opensearch/${{inputs.versions_file}})
          versions_json=$(echo $versions_str | jq -R -s -c 'split(" ")')
          echo "versions=$versions_json" >> $GITHUB_OUTPUT
          previous_version=$(echo "$versions_json" | jq -r '.[-1]')
          echo "previous_version=$previous_version" >> $GITHUB_OUTPUT

  # ---------- Current service branch ----------
  #[V] Clean [LATEST_SPRINT], Upgrade [LATEST_SPRINT] Diff Params
  Clean-Latest-Upgrade-Diff-Params:
    runs-on: ${{inputs.runner_type}}
    name: Clean [LATEST], Upgrade [LATEST] Diff Params
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
        #- name: Install Monitoring
        #uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
      - name: Install Opensearch
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc.yml'
          service_branch: '${{inputs.service_branch}}'
      - name: Verify Opensearch installation
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch
      - name: Update to latest version with diff params
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc_updated.yml'
          service_branch: '${{inputs.service_branch}}'
          deploy_mode: upgrade
      - name: Verify Opensearch upgrade
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch

  #[V] Clean [LATEST_SPRINT] Restricted
  Clean-Latest-Restricted:
    name: Clean [LATEST] Restricted
    runs-on: ${{inputs.runner_type}}
    #needs: install-python
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Check Python version
        run: python --version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
      - name: Install Opensearch in restricted mode
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          restricted: true
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc_restricted.yml'
          service_branch: '${{inputs.service_branch}}'
      - name: Verify Opensearch installation
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch

  #[V] Clean [LATEST_SPRINT] S3 with TLS
  Clean-Latest-S3-TLS:
    name: Clean [LATEST] S3 with TLS
    runs-on: ${{inputs.runner_type}}
    #needs: install-python
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Check Python version
        run: python --version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          pip install packaging
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
      - name: Install cert-manager
        run: |
          helm repo add jetstack https://charts.jetstack.io --force-update
          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager \
            --create-namespace --version v1.16.3 --set prometheus.enabled=true   --set crds.enabled=true
      - name: Create ClusterIssuer
        # language=bash
        run: kubectl apply -f qubership-test-pipelines/resources/test-clusterissuer.yaml
      - name: Get clusterissuer
        run: kubectl get clusterissuer
      - name: Update YAML secrets
        # language=bash
        run: |
          python qubership-test-pipelines/python/update_yaml.py \
            --file='qubership-test-pipelines/templates/opensearch-service/opensearch_clean_all_on_sc_tls_s3.yml' \
            --path='opensearch/snapshots/s3/keyId' \
            --value='${{secrets.AWS_S3_ACCESS_KEY_ID}}' \
          && python qubership-test-pipelines/python/update_yaml.py \
            --file='qubership-test-pipelines/templates/opensearch-service/opensearch_clean_all_on_sc_tls_s3.yml' \
            --path='opensearch/snapshots/s3/keySecret' \
            --value='${{secrets.AWS_S3_ACCESS_KEY_SECRET}}'
      - name: Display finale template
        run: cat qubership-test-pipelines/templates/opensearch-service/opensearch_clean_all_on_sc_tls_s3.yml
      - name: Clean Install opensearch [LATEST] S3 TLS
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc_tls_s3.yml'
          service_branch: '${{inputs.service_branch}}'
      - name: Verify opensearch installation
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch

  #---------- Update from old releases ----------
  #[V] Clean [N1_RELEASE], Upgrade From [N1_RELEASE] To [LATEST_SPRINT]
  #[V] Clean [N2_RELEASE], Upgrade From [N2_RELEASE] To [LATEST_SPRINT]
  Clean-Previous-Update-To-Latest:
    name: Clean [PREVIOUS], Update to [LATEST]
    needs: prepare-versions
    runs-on: ${{inputs.runner_type}}
    strategy:
      matrix:
        release: ${{fromJson(needs.prepare-versions.outputs.versions)}}
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
        #- name: Install monitoring
        #uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
      - name: Install Opensearch
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc.yml'
          service_branch: '${{matrix.release}}'
      - name: Verify Opensearch installation
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch
        with:
          service_branch: '${{matrix.release}}'
      - name: Update Opensearch to latest version
        uses: ./qubership-test-pipelines/actions/opensearch/helm_deploy_opensearch
        with:
          deploy_mode: upgrade
          path_to_template: 'templates/opensearch-service/opensearch_clean_all_on_sc.yml'
          service_branch: '${{inputs.service_branch}}'
      - name: Verify Opensearch installation
        uses: ./qubership-test-pipelines/actions/opensearch/verify_installation_opensearch
        with:
          service_branch: ${{inputs.service_branch}}
